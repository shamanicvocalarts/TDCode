# me - this DAT
# 
# frame - the current frame
# state - True if the timeline is paused
# 
# Make sure the corresponding toggle is enabled in the Execute DAT.

def onStart():
    # First, attempt to delete the TDCode pane
    try:
        tdCode_pane = ui.panes['TDCode']
        if tdCode_pane:
            tdCode_pane.close()
            print("TDCode pane successfully deleted")
        op("timer1").par.start.pulse()
    except Exception as e:
        print(f"Error deleting TDCode pane: {str(e)}")
    
    # Add the new function call
    check_and_copy_shortcuts()
    op("timer4").par.start.pulse()
    

    op("createUI").run(delayFrames = 30)
    return

def onCreate():
    check_and_copy_shortcuts()
    op("createUI").run()
    op("timer3").par.start.pulse()
    op("timer4").par.start.pulse()

    
    return

def onExit():
    return

def onFrameStart(frame):
    return

def onFrameEnd(frame):
    return

def onPlayStateChange(state):
    return

def onDeviceChange():
    return

def onProjectPreSave():
    print("Starting onProjectPreSave")
    
    def process_ui(target_path, source_path):
        target = op(target_path)
        source = op(source_path)
        
        if not target or not source:
            print(f"Error: Target {target_path} or source {source_path} not found.")
            return
        
        print(f"Processing {target.path} with {source.path}")
        
        print(f"Deleting top-level operators in {source.name}")
        for child in source.children:
            print(f"Deleting {child.name}")
            child.destroy()
        
        print("Finding top-level tagged operators")
        tagged_ops = [op for op in target.children if 'TDC' in op.tags]
        print(f"Found {len(tagged_ops)} tagged operators")
        
        for i, tagged_op in enumerate(tagged_ops):
            print(f"Copying {tagged_op.name}")
            try:
                new_op = source.copy(tagged_op)
                new_op.nodeX = 400 + i * 200
                new_op.nodeY = -400
                print(f"Successfully copied {tagged_op.name}")
            except td.tdError as e:
                
                continue
    
    # Process bookmark_bar
    process_ui('/ui/dialogs/bookmark_bar', 'mainPanelUi')
    
    # Process panebar
    process_ui('/ui/panes/panebar', 'TDCodeUi')
    
    print("Finished onProjectPreSave")
    return


def onProjectPostSave():
    return

def check_and_copy_shortcuts():
    # Check if /local exists
    local_op = op('/local')
    if not local_op:
        print("Error: /local not found")
        return

    # Check if shortcutsOld exists in /local
    if not local_op.op('shortcutsOld'):
        # If shortcuts exists in /local, rename it to shortcutsOld
        local_shortcuts = local_op.op('shortcuts')
        if local_shortcuts:
            local_shortcuts.name = 'shortcutsOld'
            print("Renamed existing shortcuts in /local to shortcutsOld")
        
        # Copy shortcuts to /local
        current_shortcuts = op('shortcuts')
        if current_shortcuts:
            new_shortcuts = local_op.copy(current_shortcuts)
            new_shortcuts.name = 'shortcuts'
            print("Copied shortcuts to /local")
        else:
            print("Error: shortcuts DAT not found")
    else:
        print("shortcutsOld already exists in /local, no action taken")

	